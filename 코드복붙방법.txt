스택오버플로우(코드 블록):

1. 서치한 코드를 내 프로그램에 복붙하기
2. 해당 코드가 제대로 돌아가는지(=내 문제를 해결해주는지) 확인하기
3. 붙여넣었던 코드를 한 줄씩 지우기
4. 코드가 한 줄씩 지워질 때 마다 어떤 문제가 발생하는지 확인하기
5. 각 줄의 코드가 무슨 일을 하는지 전부 알았다고 생각하더라도 일단 전부 지우기
6. 코드 몇 줄의 순서를 바꿔보고 원본 코드가 왜 그 순서대로 써졌었는지 확인하기

남이 쓴 유용한 코드 블록을 분해해 봄으로써 각 줄이 무슨 역할을 하고 왜 쓰였는지 알 수 있음.
다음에 비슷한 문제에 직면했을 때에는 복붙없이 스스로 해결할 수 있음.


깉헙(클론코딩, 오픈소스):

1. 프로그램의 모든 구조, 클래스, 상수, 상호작용 등을 보고 코드를 조금 바꾸어보기
2. 여전히 동작하는지/어딘가 망가졌는지, 왜 망가졌는지, 내가 알아차리지 못한 고리가 있는지 계속해서 질문하고 스스로 답을 찾아보기. 
3. 프로젝트를 분해해보고 어떻게 만들어졌는지 이해하기.


*심화
리버스 엔지니어링:

1. 평가가 좋은 스몰 프로젝트를 다운로드하기
2. 실행해보고 모든 기능을 사용해보기
3. 스크래치로 따라 만들어보기
4. 내 코드와 원본 코드를 비교하고 원본의 효율을 만들어낼 수 있었는지, 내가 이해하지 못한 솔루션이 있었는지 살펴보기